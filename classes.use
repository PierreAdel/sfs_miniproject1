model onlineShop
 
class Person
attributes
fullName: String
address: String
SSN: String
end


class Admin < Person
operations
approveOrder(order: Order)
createProduct(productId: String, title: String, price: Integer)
removeProduct(productId: String)
end

class User < Person
attributes
cart: Bag(Product) -- Bag or set?
operations
addToCart(product: Product)
removeFromCart(product: Product)
end

 
class Product
attributes
productId: String
title: String
price: Integer
end

class Order
attributes
orderId: String
totalPrice: Integer
status: String
operations
changeStatus(status: String)
end


--associations
association place between
User[1] 
Order[0..*]
end

association addRemoveFromCart between
User[0..*] 
Product[0..*]
end

association manage between
Admin[1] 
Product[0..*]
end

association approves between
Admin[1] 
Order[0..*]
end

association contains between
Order[*] 
Product[1..10]
end

 
constraints

--order cant have more than 10 items or less than 1 item
context Order
inv max10inorder:
    self.product-> size <= 10 and self.product-> size > 0

 -- total price of order must be the sum of inficiduval prices of each prodicut in the order
-- inv totalPrice:
 --   self.totalPrice->Iterate(p:Product; t:Integer=0 | t+s.price )
 